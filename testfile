git init
git config --global user.name "Polarapu Prasad"
git config --global user.email "devopstraining2015@gmail.com"

git config --list

git config --global --unset user.name
git config --global --unset user.email

git config --list

-----------------------
touch file1
ls
git status
git add file1
git status
git commit -m "label" file1
git status
git log
git show cid


touch file2 file3 file4
git status
git add file2 file3 file4
or
git add .
or
git add *
or
git add -A
git status
git commit -m "label"
git log
git show cid


==============================

git clone https://github.com/polarapu/Batch82.git
ls
cd Batch82
touch file1
git status
git add file1
git status
git commit -m "label" file1
git status
git log
git push

========================
git clone https://github.com/polarapu/Batch82.git
ls
cd Batch82
ls
touch prasad
ls
git status
git add prasad
git status
git commit -m "sample commit" prasad
git status
git push

git pull --rebase
git push


git add file1  (workspace to staging)
git reset head file1  (staging to workspace)  n-1

git commit -m "lable" file1  (staging to local)
git reset --soft cid  (local to staging)   n-1

git reset --mixed cid  (local to workspace)   n-1

git reset --hard cid  (to delete commit and data)  n-1



mkdir dir1
ls
cd dir1
touch f1 f2
cd ..
git staus
git add .
git commit -m "sample dir"
git push

=========================
git log
git log -n
git log --oneline
git log --oneline -n
git log --author=name
git log --author=name -n
git log --author=name --oneline
git log --author=name --oneline -n

git log --since=yy-mm-dd
or
git log --after=yy-mm-dd

git log --until=yy-mm-dd
or
git log --before=yy-mm-dd

git log --since=yy-mm-dd --until=yy-mm-dd
or
git log --after=yy-mm-dd --before=yy-mm-dd

git log --after="yy-mm-dd 01:00" --before="yy-mm-dd 24:00"

git log -- file-name

git log --grep "label"


=============================
git branch
git branch release1
git branch
git checkout release1
git checkout main
create data, add, commit
git checkout release1
ls
git merge main

git branch -d Release1  (delete on local)

git push origin branch-name
or
git push path/c-repo branch-name

git push origin -d branch-name  (delete on central)


Stash
======
git stash list
git stash save "label"

git stash show stash@{x}
git stash show -p stash@{x}

POP, APPLY, DROP
=================

POP = cut
====
git stash pop
git stash pop stash@{x}

APPLY  = copy
======
git stash apply
git stash apply stash@{x}


DROP  = delete
=====
git stash drop
git stash drop stash@{x}


TAG
====
git tag
git tag T-1.0
git show T-1.0

git tag -d T-1.0  (delete on local)

git tag T-1.0 cid

git push origin T-1.0
or
git push --tags

git push origin -d T-1.0  (to delete on central repo)


Alias
======

git status
git config --global alias.s "status"
git s

git log --oneline
git config --global alias.l1 "log --oneline"
git l1

git config --list
git config --global alias.cl "config --list"
git cl

git stash list
git config --global alias.sl "stash list"
git sl


git config --global --unset alias.sl


merge vs rebase
===============
git merge branch
git rebase branch

git checkout -b branch-name  (it will create new branch and checkout)

amend
=====
git commit --amend -m "label"


revert
======
git revert cid

cherry-pick
===========
git cherry-pick cid


diff
====
git diff file1 file2
git diff branch1 branch2


fork
====

.gitignore
==========

git pull = git fetch + git merge